name: Build & Push Tagged Docker Image (Multi-Arch)

on:
  push:
    tags:
      - 'v*'

jobs:
  docker:
    name: Build and Push Docker Image
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag name
        id: vars
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

          if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            MINOR_TAG=$(echo "$TAG" | cut -d. -f1-2)
            MAJOR_TAG=$(echo "$TAG" | cut -d. -f1)
            echo "MINOR_TAG=$MINOR_TAG" >> $GITHUB_OUTPUT
            echo "MAJOR_TAG=$MAJOR_TAG" >> $GITHUB_OUTPUT
            echo "IS_STABLE=true" >> $GITHUB_OUTPUT
          else
            echo "IS_STABLE=false" >> $GITHUB_OUTPUT
          fi

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image (multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            BUILD_VERSION=${{ steps.vars.outputs.TAG }}
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.TAG }}
            ${{ steps.vars.outputs.IS_STABLE == 'true' && format('ghcr.io/{0}:{1}', github.repository, steps.vars.outputs.MINOR_TAG) || '' }}
            ${{ steps.vars.outputs.IS_STABLE == 'true' && format('ghcr.io/{0}:{1}', github.repository, steps.vars.outputs.MAJOR_TAG) || '' }}

      - name: Tag as latest (only for stable releases)
        if: ${{ steps.vars.outputs.IS_STABLE == 'true' }}
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/${{ github.repository }}:latest \
            ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.TAG }}

      - name: Validate tag format
        run: |
          if [[ ! ${{ steps.vars.outputs.TAG }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "‚ùå Invalid tag format. Use vX.Y.Z or vX.Y.Z-suffix"
            exit 1
          fi